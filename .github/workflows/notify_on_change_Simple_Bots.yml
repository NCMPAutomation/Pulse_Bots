# This is a basic workflow to help you get started with the Actions

name: Notify on Change Simple-Bots

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "Simple-Bots" ]
  pull_request:
    branches: [ "Simple-Bots" ]



jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetch all branches

    - name: Get all branches
      id: branches
      run: |
        branches=$(git branch -r | grep -v '\->' | sed 's/origin\///')
        echo "branches=$(echo $branches | tr '\n' ' ')" >> $GITHUB_ENV

    - name: Collect file counts and names
      id: collect_files
      run: |
        total_files=0
        total_script_files=0
        total_files_excluding=0
        all_files=""
        for branch in ${{ env.branches }}; do
          git checkout $branch
          branch_files=$(git ls-tree -r --name-only HEAD)
          script_files=$(echo "$branch_files" | grep -E '\.sh$|\.py$|\.js$|\.ps1$|\.xaml$|\.yml$|\.xml$|\.yaml$')
          files_excluding=$(echo "$branch_files" | grep -vE '\.jpg$|\.JPG$|\.txt$|\.md$|\.ppt$|\.pptx$')
          
          file_count=$(echo "$branch_files" | wc -l)
          script_file_count=$(echo "$script_files" | wc -l)
          files_excluding_count=$(echo "$files_excluding" | wc -l)
          
          total_files=$((total_files + file_count))
          total_script_files=$((total_script_files + script_file_count))
          total_script_files_final=$((total_script_files - 3))
          total_files_excluding=$((total_files_excluding + files_excluding_count))
          
          all_files="$all_files\nFiles in branch $branch:\n$branch_files"
        done
        echo "total_files=$total_files" >> $GITHUB_ENV
        echo "total_script_files_final=$total_script_files_final" >> $GITHUB_ENV
        echo "total_files_excluding=$total_files_excluding" >> $GITHUB_ENV
        echo "all_files<<EOF" >> $GITHUB_ENV
        echo -e "$all_files" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Get commit details
      id: commit_details
      run: |
        if [ "${{ github.event_name }}" == "push" ]; then
          echo "message=${{ github.event.head_commit.message }}" >> $GITHUB_ENV
          changes=$(git diff --name-only HEAD~1 HEAD)
          echo "changes<<EOF" >> $GITHUB_ENV
          echo "$changes" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        elif [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "message=$(git log -1 --pretty=%B ${{ github.event.pull_request.head.sha }})" >> $GITHUB_ENV
          changes=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          echo "changes<<EOF" >> $GITHUB_ENV
          echo "$changes" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        fi
        echo "sha=$(git log -1 --pretty=%H)" >> $GITHUB_ENV
        echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV


    - name: Send notification email
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.office365.com  # Replace with your SMTP server
        server_port: 587
        username: ${{ secrets.SMTP_USERNAME }}
        password: ${{ secrets.SMTP_PASSWORD }}
        subject: Repository update Notification
        to: athulya.s@netcon.in  # Replace with the recipient's email address
        from: netconncmp@netcon.in  # Replace with the sender's email address
        body: |
          Hi Team,
          
          Please be informed that changes have been made to the repository.
          
          Branch: ${{ github.ref_name }}
          
          Commit details:
          Message: ${{ env.message }}

          Total number of script files: ${{ env.total_script_files_final }}

          Thanks,
          Cloud Team
